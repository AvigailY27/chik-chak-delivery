{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WIN 11\\\\PycharmProjects\\\\pythonProjectyolo\\\\delivery-form\\\\delivery-form\\\\frontend\\\\src\\\\DeliveryForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DeliveryTable from \"./DeliveryTable\"; // רכיב הטבלה\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeliveryForm = () => {\n  _s();\n  const [tableData, setTableData] = useState([{\n    clientName: \"\",\n    address: \"\",\n    deliveryDate: \"\",\n    startTime: \"\",\n    lastTime: \"\",\n    status: \"\"\n  }]);\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  // טיפול בהעלאת קובץ\n  const handleFileUpload = e => {\n    const uploadedFile = e.target.files[0];\n    if (!uploadedFile || !uploadedFile.name.endsWith(\".csv\") && !uploadedFile.name.endsWith(\".json\")) {\n      alert(\"אנא העלה קובץ מסוג CSV או JSON בלבד.\");\n      return;\n    }\n    setFile(uploadedFile);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // אם יש קובץ, נשלח אותו לשרת\n    if (file) {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      try {\n        const response = await fetch(\"http://localhost:5000/upload\", {\n          method: \"POST\",\n          body: formData\n        });\n        if (!response.ok) {\n          throw new Error(\"שגיאה בתגובה מהשרת.\");\n        }\n        const result = await response.json();\n        setMessage(result.message);\n\n        // איפוס הטופס לאחר שליחה מוצלחת\n        setFile(null);\n        setTableData([{\n          destination: \"\",\n          timeMax: \"\",\n          startTime: \"\",\n          endTime: \"\"\n        }]);\n      } catch (error) {\n        console.error(\"שגיאה בשליחת הקובץ:\", error);\n        setMessage(\"שגיאה בשליחת הקובץ.\");\n      }\n      return;\n    }\n\n    // סינון שורות ריקות\n    const filteredTableData = tableData.filter(row => row.destination.trim() && row.timeMax.trim() && row.startTime.trim() && row.endTime.trim());\n    if (filteredTableData.length === 0) {\n      alert(\"אין נתונים לשליחה.\");\n      return;\n    }\n\n    // יצירת קובץ CSV\n    const csvContent = \"\\uFEFF destination, timeMax, start\\n\" + filteredTableData.map(row => `${row.destination},${row.timeMax},${row.startTime},${row.endTime}`).join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const formData = new FormData();\n    formData.append(\"file\", new File([blob], \"shipping_data.csv\"));\n    try {\n      const response = await fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(\"שגיאה בתגובה מהשרת.\");\n      }\n      const result = await response.json();\n      setMessage(result.message);\n\n      // איפוס הטופס לאחר שליחה מוצלחת\n      setTableData([{\n        destination: \"\",\n        timeMax: \"\",\n        startTime: \"\",\n        endTime: \"\"\n      }]);\n    } catch (error) {\n      console.error(\"שגיאה בשליחת הנתונים:\", error);\n      setMessage(\"שגיאה בשליחת הנתונים.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCE6 \\u05D8\\u05D5\\u05E4\\u05E1 \\u05D4\\u05D6\\u05E0\\u05EA \\u05DE\\u05E9\\u05DC\\u05D5\\u05D7\\u05D9\\u05DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv,.json\",\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), !file && /*#__PURE__*/_jsxDEV(DeliveryTable, {\n        tableData: tableData,\n        setTableData: setTableData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uD83D\\uDCE4 \\u05E9\\u05DC\\u05D7 \\u05E0\\u05EA\\u05D5\\u05E0\\u05D9\\u05DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(DeliveryForm, \"VsWWaZjf35Zv8/2Kb7CI1Z923M8=\");\n_c = DeliveryForm;\nexport default DeliveryForm;\nvar _c;\n$RefreshReg$(_c, \"DeliveryForm\");","map":{"version":3,"names":["React","useState","DeliveryTable","jsxDEV","_jsxDEV","DeliveryForm","_s","tableData","setTableData","clientName","address","deliveryDate","startTime","lastTime","status","file","setFile","message","setMessage","handleFileUpload","e","uploadedFile","target","files","name","endsWith","alert","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","ok","Error","result","json","destination","timeMax","endTime","error","console","filteredTableData","filter","row","trim","length","csvContent","map","join","blob","Blob","type","File","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","accept","onChange","_c","$RefreshReg$"],"sources":["C:/Users/WIN 11/PycharmProjects/pythonProjectyolo/delivery-form/delivery-form/frontend/src/DeliveryForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport DeliveryTable from \"./DeliveryTable\"; // רכיב הטבלה\r\nimport './style.css';\r\n\r\nconst DeliveryForm = () => {\r\n    const [tableData, setTableData] = useState([\r\n        { clientName: \"\", address: \"\", deliveryDate: \"\", startTime: \"\", lastTime: \"\", status: \"\" },\r\n    ]);\r\n    const [file, setFile] = useState(null);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    // טיפול בהעלאת קובץ\r\n    const handleFileUpload = (e) => {\r\n        const uploadedFile = e.target.files[0];\r\n\r\n        if (!uploadedFile || (!uploadedFile.name.endsWith(\".csv\") && !uploadedFile.name.endsWith(\".json\"))) {\r\n            alert(\"אנא העלה קובץ מסוג CSV או JSON בלבד.\");\r\n            return;\r\n        }\r\n        setFile(uploadedFile);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        // אם יש קובץ, נשלח אותו לשרת\r\n        if (file) {\r\n            const formData = new FormData();\r\n            formData.append(\"file\", file);\r\n    \r\n            try {\r\n                const response = await fetch(\"http://localhost:5000/upload\", {\r\n                    method: \"POST\",\r\n                    body: formData,\r\n                });\r\n    \r\n                if (!response.ok) {\r\n                    throw new Error(\"שגיאה בתגובה מהשרת.\");\r\n                }\r\n    \r\n                const result = await response.json();\r\n                setMessage(result.message);\r\n    \r\n                // איפוס הטופס לאחר שליחה מוצלחת\r\n                setFile(null);\r\n                setTableData([{ destination: \"\", timeMax: \"\", startTime: \"\", endTime: \"\" }]);\r\n            } catch (error) {\r\n                console.error(\"שגיאה בשליחת הקובץ:\", error);\r\n                setMessage(\"שגיאה בשליחת הקובץ.\");\r\n            }\r\n            return;\r\n        }\r\n    \r\n        // סינון שורות ריקות\r\n        const filteredTableData = tableData.filter(row =>\r\n            row.destination.trim() &&\r\n            row.timeMax.trim() &&\r\n            row.startTime.trim() &&\r\n            row.endTime.trim()\r\n        );\r\n    \r\n        if (filteredTableData.length === 0) {\r\n            alert(\"אין נתונים לשליחה.\");\r\n            return;\r\n        }\r\n    \r\n        // יצירת קובץ CSV\r\n        const csvContent =\r\n            \"\\uFEFF destination, timeMax, start\\n\" +\r\n            filteredTableData\r\n                .map((row) => `${row.destination},${row.timeMax},${row.startTime},${row.endTime}`)\r\n                .join(\"\\n\");\r\n    \r\n        const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n        const formData = new FormData();\r\n        formData.append(\"file\", new File([blob], \"shipping_data.csv\"));\r\n    \r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/upload\", {\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(\"שגיאה בתגובה מהשרת.\");\r\n            }\r\n    \r\n            const result = await response.json();\r\n            setMessage(result.message);\r\n    \r\n            // איפוס הטופס לאחר שליחה מוצלחת\r\n            setTableData([{ destination: \"\", timeMax: \"\", startTime: \"\", endTime: \"\" }]);\r\n        } catch (error) {\r\n            console.error(\"שגיאה בשליחת הנתונים:\", error);\r\n            setMessage(\"שגיאה בשליחת הנתונים.\");\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>📦 טופס הזנת משלוחים</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"file\" accept=\".csv,.json\" onChange={handleFileUpload} />\r\n                {!file && (\r\n                    <DeliveryTable tableData={tableData} setTableData={setTableData} />\r\n                )}\r\n                <button type=\"submit\">📤 שלח נתונים</button>\r\n            </form>\r\n            {message && <p className=\"message\">{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeliveryForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}